<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.springboot.demo.Dao.ActivityMapper">
  <resultMap id="BaseResultMap" type="com.springboot.demo.Entity.Activity">
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="topic" jdbcType="VARCHAR" property="topic" />
    <result column="category_id" jdbcType="INTEGER" property="categoryId" />
    <result column="createby_id" jdbcType="INTEGER" property="createbyId" />
    <result column="time" jdbcType="TIMESTAMP" property="time" />
    <result column="location" jdbcType="VARCHAR" property="location" />
    <result column="semester" jdbcType="INTEGER" property="semester" />
    <result column="schoolyear" jdbcType="VARCHAR" property="schoolyear" />
    <result column="create_time" jdbcType="TIMESTAMP" property="createTime" />
  </resultMap>
  <resultMap extends="BaseResultMap" id="ResultMapWithBLOBs" type="com.springboot.demo.Entity.Activity">
    <result column="content" jdbcType="LONGVARCHAR" property="content" />
  </resultMap>
  <sql id="Base_Column_List">
    id, topic, category_id, createby_id, time,location, semester, schoolyear, create_time
  </sql>
  <sql id="Blob_Column_List">
    content
  </sql>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="ResultMapWithBLOBs">
    select 
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from activity
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from activity
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.springboot.demo.Entity.Activity">
    insert into activity (id, topic,
      category_id, createby_id, time, location,
      semester, schoolyear, create_time, 
      content)
    values (#{id,jdbcType=INTEGER}, #{topic,jdbcType=VARCHAR},
      #{categoryId,jdbcType=INTEGER}, #{createbyId,jdbcType=INTEGER}, #{time,jdbcType=TIMESTAMP}, #{location,jdbcType=VARCHAR},
      #{semester,jdbcType=INTEGER}, #{schoolyear,jdbcType=VARCHAR}, #{createTime,jdbcType=TIMESTAMP}, 
      #{content,jdbcType=LONGVARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="com.springboot.demo.Entity.Activity">
    insert into activity
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="topic != null">
        topic,
      </if>
      <if test="categoryId != null">
        category_id,
      </if>
      <if test="createbyId != null">
        createby_id,
      </if>
      <if test="time != null">
        time,
      </if>
      <if test="location != null">
        location,
      </if>
      <if test="semester != null">
        semester,
      </if>
      <if test="schoolyear != null">
        schoolyear,
      </if>
      <if test="createTime != null">
        create_time,
      </if>
      <if test="content != null">
        content,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=INTEGER},
      </if>
      <if test="topic != null">
        #{topic,jdbcType=VARCHAR},
      </if>
      <if test="categoryId != null">
        #{categoryId,jdbcType=INTEGER},
      </if>
      <if test="createbyId != null">
        #{createbyId,jdbcType=INTEGER},
      </if>
      <if test="time != null">
        #{time,jdbcType=TIMESTAMP},
      </if>
      <if test="location != null">
        #{location,jdbcType=VARCHAR},
      </if>
      <if test="semester != null">
        #{semester,jdbcType=INTEGER},
      </if>
      <if test="schoolyear != null">
        #{schoolyear,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null">
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="content != null">
        #{content,jdbcType=LONGVARCHAR},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.springboot.demo.Entity.Activity">
    update activity
    <set>
      <if test="topic != null">
        topic = #{topic,jdbcType=VARCHAR},
      </if>
      <if test="categoryId != null">
        category_id = #{categoryId,jdbcType=INTEGER},
      </if>
      <if test="createbyId != null">
        createby_id = #{createbyId,jdbcType=INTEGER},
      </if>
      <if test="time != null">
        time = #{time,jdbcType=TIMESTAMP},
      </if>
      <if test="location != null">
        location = #{location,jdbcType=VARCHAR},
      </if>
      <if test="semester != null">
        semester = #{semester,jdbcType=INTEGER},
      </if>
      <if test="schoolyear != null">
        schoolyear = #{schoolyear,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null">
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="content != null">
        content = #{content,jdbcType=LONGVARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKeyWithBLOBs" parameterType="com.springboot.demo.Entity.Activity">
    update activity
    set topic = #{topic,jdbcType=VARCHAR},
      category_id = #{categoryId,jdbcType=INTEGER},
      createby_id = #{createbyId,jdbcType=INTEGER},
      time = #{time,jdbcType=TIMESTAMP},
      location = #{location,jdbcType=VARCHAR},
      semester = #{semester,jdbcType=INTEGER},
      schoolyear = #{schoolyear,jdbcType=VARCHAR},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      content = #{content,jdbcType=LONGVARCHAR}
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.springboot.demo.Entity.Activity">
    update activity
    set topic = #{topic,jdbcType=VARCHAR},
      category_id = #{categoryId,jdbcType=INTEGER},
      createby_id = #{createbyId,jdbcType=INTEGER},
      time = #{time,jdbcType=TIMESTAMP},
      location = #{location,jdbcType=VARCHAR},
      semester = #{semester,jdbcType=INTEGER},
      schoolyear = #{schoolyear,jdbcType=VARCHAR},
      create_time = #{createTime,jdbcType=TIMESTAMP}
    where id = #{id,jdbcType=INTEGER}
  </update>

  <select id="getAllActivity"  resultMap="ResultMapWithBLOBs" parameterType="java.util.Map">
    select
        a.id as id,
        a.topic as topic,
        a.content as content,
        a.category_id,
        ac.`name` as category,
        a.createby_id,
        u.`name` as creator,
        u.role as creatorRole,
        DATE_FORMAT(a.time,'%Y-%m-%d %H:%i')  as time,
        a.location as location,
        a.semester as semester,
        a.schoolyear as schoolyear,
        a.create_time
    from activity as a
         LEFT JOIN activity_category as ac on ac.id=a.category_id
         LEFT JOIN `user` as u on u.id = a.createby_id
    where 1=1
    <if test="keyword!=null and keyword !=''">
      and a.content LIKE '%${keyword}%'
    </if>
    <if test="categoryId !='null' and categoryId !='' ">
      and a.category_id = #{categoryId}
    </if>
    <if test="createbyId !='null' and createbyId !='' ">
      and a.createby_id = #{createbyId}
    </if>
    <if test="creatorRole !=null and creatorRole !='' ">
      and u.role = #{creatorRole}
    </if>
    <if test="semester !='null' and semester !='' ">
      and a.semester = #{semester}
    </if>
    <if test="schoolyear !=null and schoolyear !='' ">
      and a.schoolyear = #{schoolyear}
    </if>
    limit ${before},${after}
  </select>

    <select id="getActivityById"  resultMap="ResultMapWithBLOBs">
        SELECT
            a.id as id,
            a.topic as topic,
            a.content as content,
            a.category_id,
            ac.`name` as category,
            a.createby_id,
            u.`name` as creator,
            u.role as creatorRole,
            DATE_FORMAT(a.time,'%Y-%m-%d %H:%i')  as time,
            a.location as location,
            a.semester as semester,
            a.schoolyear as schoolyear,
            a.create_time
        FROM
            activity a
            left JOIN activity_category ac on a.category_id=ac.id
            left JOIN `user` u on a.createby_id=u.id
        where a.id = #{id,jdbcType=INTEGER}
    </select>

  <select id="getTotalCount"  resultType="java.lang.Integer" >
    select
    count(1)
    from activity as a
    LEFT JOIN activity_category as ac on ac.id=a.category_id
    LEFT JOIN `user` as u on u.id = a.createby_id
    where 1=1
    <if test="keyword!=null and keyword !=''">
    and a.content LIKE '%${keyword}%'
    </if>
    <if test="categoryId !='null' and categoryId !='' ">
      and a.category_id = #{categoryId}
    </if>
    <if test="createbyId !='null' and createbyId !='' ">
      and a.createby_id = #{createbyId}
    </if>
    <if test="creatorRole !=null and creatorRole !='' ">
      and u.role = #{creatorRole}
    </if>
    <if test="semester !='null' and semester !='' ">
      and a.semester = #{semester}
    </if>
    <if test="schoolyear !=null and schoolyear !='' ">
      and a.schoolyear = #{schoolyear}
    </if>
  </select>

  <select id="getTotalCountByUserId"  resultType="java.lang.Integer" >
    select
    count(1)
    from activity as a
    LEFT JOIN activity_category as ac on ac.id=a.category_id
    LEFT JOIN `user` as u on u.id = a.createby_id
    where 1=1
      and a.createby_id=${userId}
    <if test="keyword!=null and keyword !=''">
      and a.content LIKE '%${keyword}%'
    </if>
    <if test="categoryId !='null' and categoryId !='' ">
      and a.category_id = #{categoryId}
    </if>
    <if test="createbyId !='null' and createbyId !='' ">
      and a.createby_id = #{createbyId}
    </if>
    <if test="creatorRole !=null and creatorRole !='' ">
      and u.role = #{creatorRole}
    </if>
    <if test="semester !='null' and semester !='' ">
      and a.semester = #{semester}
    </if>
    <if test="schoolyear !=null and schoolyear !='' ">
      and a.schoolyear = #{schoolyear}
    </if>
  </select>

  <select id="getAllActivityByUserId"  resultMap="ResultMapWithBLOBs" parameterType="java.util.Map">
    select
    a.id as id,
    a.topic as topic,
    a.content as content,
    a.category_id,
    ac.`name` as category,
    a.createby_id,
    u.`name` as creator,
    u.role as creatorRole,
    DATE_FORMAT(a.time,'%Y-%m-%d %H:%i')  as time,
    a.location as location,
    a.semester as semester,
    a.schoolyear as schoolyear,
    a.create_time
    from activity as a
    LEFT JOIN activity_category as ac on ac.id=a.category_id
    LEFT JOIN `user` as u on u.id = a.createby_id
    where 1=1
      and a.createby_id=${userId}
    <if test="keyword!=null and keyword !=''">
      and a.content LIKE '%${keyword}%'
    </if>
    <if test="categoryId !='null' and categoryId !='' ">
      and a.category_id = #{categoryId}
    </if>
    <if test="createbyId !='null' and createbyId !='' ">
      and a.createby_id = #{createbyId}
    </if>
    <if test="creatorRole !=null and creatorRole !='' ">
      and u.role = #{creatorRole}
    </if>
    <if test="semester !='null' and semester !='' ">
      and a.semester = #{semester}
    </if>
    <if test="schoolyear !=null and schoolyear !='' ">
      and a.schoolyear = #{schoolyear}
    </if>
    limit ${before},${after}
  </select>

</mapper>