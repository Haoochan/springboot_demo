<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.springboot.demo.Dao.UserClassCollegeMapMapper">
  <resultMap id="BaseResultMap" type="com.springboot.demo.Entity.UserClassCollegeMap">
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="userId" jdbcType="INTEGER" property="userId" />
    <result column="classesId" jdbcType="INTEGER" property="classesId" />
    <result column="collegeId" jdbcType="INTEGER" property="collegeId" />
  </resultMap>
  <sql id="Base_Column_List">
    id, userId, classesId, collegeId
  </sql>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from user_class_college_map
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from user_class_college_map
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.springboot.demo.Entity.UserClassCollegeMap">
    insert into user_class_college_map (id, userId, classesId,
      collegeId)
    values (#{id,jdbcType=INTEGER}, #{userId,jdbcType=INTEGER}, #{classesId,jdbcType=INTEGER},
      #{collegeId,jdbcType=INTEGER})
  </insert>
  <insert id="insertSelective" parameterType="com.springboot.demo.Entity.UserClassCollegeMap">
    insert into user_class_college_map
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="userId != null">
        userId,
      </if>
      <if test="classesId != null">
        classId,
      </if>
      <if test="collegeId != null">
        collegeId,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=INTEGER},
      </if>
      <if test="userId != null">
        #{userId,jdbcType=INTEGER},
      </if>
      <if test="classesId != null">
        #{classesId,jdbcType=INTEGER},
      </if>
      <if test="collegeId != null">
        #{collegeId,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.springboot.demo.Entity.UserClassCollegeMap">
    update user_class_college_map
    <set>
      <if test="userId != null">
        userId = #{userId,jdbcType=INTEGER},
      </if>
      <if test="classesId != null">
        classesId = #{classesId,jdbcType=INTEGER},
      </if>
      <if test="collegeId != null">
        collegeId = #{collegeId,jdbcType=INTEGER},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.springboot.demo.Entity.UserClassCollegeMap">
    update user_class_college_map
    set userId = #{userId,jdbcType=INTEGER},
      classesId = #{classesId,jdbcType=INTEGER},
      collegeId = #{collegeId,jdbcType=INTEGER}
    where id = #{id,jdbcType=INTEGER}
  </update>

  <update id="updateFirstClass" parameterType="com.springboot.demo.Entity.UserClassCollegeMap">
  update user_class_college_map
  <set>
    <if test="classesId != null">
      classesId = #{classesId,jdbcType=INTEGER},
    </if>
    <if test="collegeId != null">
      collegeId = #{collegeId,jdbcType=INTEGER},
    </if>
  </set>
  where userId = #{userId,jdbcType=INTEGER}
  limit 1
</update>

  <update id="updateSecondClass" parameterType="com.springboot.demo.Entity.UserClassCollegeMap">
    update user_class_college_map
    <set>
      <if test="classesId != null">
        classesId = #{classesId,jdbcType=INTEGER},
      </if>
      <if test="collegeId != null">
        collegeId = #{collegeId,jdbcType=INTEGER},
      </if>
    </set>
    where userId = #{userId,jdbcType=INTEGER}
    ORDER BY id desc
    limit 1
  </update>
</mapper>